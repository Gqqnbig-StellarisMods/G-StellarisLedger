@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer


@{
	ViewData["Title"] = "Factions";
}

@section head
{
	<style type="text/css">
		label {
			padding-right:3em;
		}
	</style>
}

@section Scripts
{
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.0/lodash.min.js"></script>
	<script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>

	<script>
		google.charts.load('current', { 'packages': ['corechart', 'table'] });
		let allFactions = [];
		let dataTable;

		document.saveGamePath = "@(((String)ViewData["LatestSaveGamesPath"]).Replace('\\', '/'))";
		google.charts.setOnLoadCallback(() =>
		{
			fetch(`/api/${document.saveGamePath}/Countries/0/Factions`).then(response => response.json()).then(colonies =>
			{
				for (let colony of colonies)
				{
					Array.prototype.push.apply(allFactions, Object.keys(colony.factions));
				}
				allFactions = _.uniq(allFactions);

				dataTable = new google.visualization.DataTable();
				dataTable.addColumn('string', 'Planet');
				//每个派系都是一列
				for (let i = 0; i < allFactions.length; i++)
				{
					dataTable.addColumn('number', allFactions[i]);
				}

				for (let colony of colonies)
				{
					let row = [];
					for (let faction in colony.factions)
					{
						let p = allFactions.indexOf(faction);
						row[p] = colony.factions[faction];
					}

					if (row.length < allFactions.length)
						row[allFactions.length - 1] = null;

					row.unshift(colony.name);
					dataTable.addRow(row);
				}

				showFactionFilters(allFactions);

				refreshFactionsView();
			});
		});

		function showFactionFilters(factions)
		{
			$("#visibleFactions").empty();

			for (let faction of factions)
			{
				//考虑使用 https://github.com/treycordova/nativejsx
				let checkBox = $(`<input type='checkbox' name='${faction}'>`);
				checkBox.change(function ()
				{
					sessionStorage.setItem("faction-" + faction, $(this).prop("checked"));
					refreshFactionsView();
				});
				let v = sessionStorage.getItem("faction-" + faction);
				if (v === null)
					v = true;
				else
					v = v === "true";
				checkBox.prop("checked", v);

				let label = $(`<label>${faction}</label>`);
				label.prepend(checkBox);
				$("#visibleFactions").append(label);
			}
		}

		function refreshFactionsView()
		{
			let view = new google.visualization.DataView(dataTable);
			let visibleColumns = [0];

			for (let i = 0; i < allFactions.length; i++)
			{
				if ($(`#visibleFactions input[name="${allFactions[i]}"]`).prop("checked"))
					visibleColumns.push(i+1);
			}

			visibleColumns.push({
				calc: (dataTable, rowNum) =>
				{
					let sum = 0;
					for (let i = 0; i < allFactions.length; i++)
					{
						if ($(`#visibleFactions input[name="${allFactions[i]}"]`).prop("checked"))
							sum += dataTable.getValue(rowNum, i + 1);
					}
					return sum;
				},
				type: 'number',
				label: 'Total'
			});

			view.setColumns(visibleColumns);

			var table = new google.visualization.Table(document.getElementById('table_div'));

			table.draw(view);
		}
	</script>
}
<fieldset>
	<legend>@Localizer["Show following factions"]</legend>
	<div id="visibleFactions" class="loading-prompt" data-time="10"></div>
</fieldset>

<div id="table_div"></div>