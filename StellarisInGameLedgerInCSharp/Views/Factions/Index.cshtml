@{
	ViewData["Title"] = "Factions";
}

@section head
{
	<style type="text/css">
		label {
			padding-right:3em;
		}
	</style>
}

@section Scripts
{
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.0/lodash.min.js"></script>
	<script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>

	<script>
		google.charts.load('current', { 'packages': ['corechart', 'table'] });
		let factions = [];
		let dataTable;

		google.charts.setOnLoadCallback(() =>
		{
			fetch("/api/RecentSaves?limit=1").then(response => response.json()).then(recentSaves =>
			{
				if (recentSaves.length === 0)
				{
					$("body").html("No savegames");
					return;
				}

				path = recentSaves[0];
				fetch(`/api/${path.replace("\\", "/")}/Countries/Player`).then(r =>
				{
					const i = path.indexOf("\\") + 1;
					//定义一个新的承诺，当r.json()承诺实现时，新的承诺也实现。
					return new Promise(function(resolve, reject)
					{
						r.json().then(json =>
						{
							resolve({
								date: path.substr(i, path.length - i - ".sav".length),
								content: json
							});
						}).catch(function(ex)
						{
							$("body").text("Error");
							throw ex;
						});
					});
				}).then(data =>
				{
					let colonies = data.content.colonies;
					for (let colony of colonies)
					{
						let pops = colony.pops;
						pops.forEach(faction =>
						{
							if (factions.indexOf(faction) === -1)
							{
								factions.push(faction);
							}
						});
					}

					dataTable = new google.visualization.DataTable();
					dataTable.addColumn('string', 'Planet');
					for (let i = 0; i < factions.length; i++)
					{
						dataTable.addColumn('number', factions[i]);
					}

					for (let colony of colonies)
					{
						let groups = _.groupBy(colony.pops);
						let row = [];
						for (let faction in groups)
						{
							let p = factions.indexOf(faction);
							row[p] = groups[faction].length;
						}

						if (row.length < factions.length)
							row[factions.length - 1] = null;

						row.unshift(colony.name);
						dataTable.addRow(row);
					}

					showFactionFilters(factions);

					refreshFactionsView();
				});
			});
		});

		function showFactionFilters(factions)
		{
			$("#visibleFactions").empty();

			for (let faction of factions)
			{
				//考虑使用 https://github.com/treycordova/nativejsx
				let checkBox = $(`<input type='checkbox' name='${faction}'>`);
				checkBox.change(function ()
				{
					sessionStorage.setItem("faction-" + faction, $(this).prop("checked"));
					refreshFactionsView();
				});
				let v = sessionStorage.getItem("faction-" + faction);
				if (v === null)
					v = true;
				else
					v = v === "true";
				checkBox.prop("checked", v);

				let label = $(`<label>${faction}</label>`);
				label.prepend(checkBox);
				$("#visibleFactions").append(label);
			}
		}

		function refreshFactionsView()
		{
			let view = new google.visualization.DataView(dataTable);
			let visibleColumns = [0];

			for (let i = 0; i < factions.length; i++)
			{
				if ($(`#visibleFactions input[name="${factions[i]}"]`).prop("checked"))
					visibleColumns.push(i+1);
			}

			visibleColumns.push({
				calc: (dataTable, rowNum) =>
				{
					let sum = 0;
					for (let i = 0; i < factions.length; i++)
					{
						if ($(`#visibleFactions input[name="${factions[i]}"]`).prop("checked"))
							sum += dataTable.getValue(rowNum, i + 1);
					}
					return sum;
				},
				type: 'number',
				label: 'Total'
			});

			view.setColumns(visibleColumns);

			var table = new google.visualization.Table(document.getElementById('table_div'));

			table.draw(view);
		}
	</script>
}
<fieldset>
	<legend>Show following factions</legend>
	<div id="visibleFactions" class="loading-prompt" data-time="10"></div>
</fieldset>

<div id="table_div"></div>